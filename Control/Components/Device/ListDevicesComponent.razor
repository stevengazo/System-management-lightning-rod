@using Entities;
@using Business;


<div >
    <Input type="text" value="Buscar" @onchange="SearchValue" class="form-group form-control"/>
</div>

<div>
    <table class="table table-responsive-sm table-bordered table-hover table-light"  >
        <thead>
            <tr>
                <td> Numero de Serie</td>               
                <td> Alias</td>
                <td> Fecha de Instalación</td>
                <td> Vendedor</td>
                <td> Cliente</td>                
                <td></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Devices)
            {
                <tr>
                    <td> @obj.DeviceId</td>
                    <td> @obj.Alias</td>
                    <td> @obj.InstallationDate.Date</td>
                    <td> @obj.SaleMan.Name</td>
                    <td> @obj.Client.Name</td>
                    <td> <a href="device/view/@obj.DeviceId" > Ver </a></td>
                    <td> <a href="device/update/@obj.DeviceId" > Modificar</a></td>
                </tr>
            }
        </tbody>
    </table>
</div>



@code { 
    [Parameter]
    public string id { get; set; }

    List<DeviceEntity> tmpDevices = new List<DeviceEntity>();
    List<DeviceEntity> Devices = new List<DeviceEntity>();
    protected override async Task OnInitializedAsync()
    {
        if (id == null)
        {
            tmpDevices = B_Device.ListOfDevices();
            Devices = tmpDevices;
        }
        else
        {
            tmpDevices = B_Device.ListOfDevices(id);
            Devices = tmpDevices;
        }
    }



    private void SearchValue(ChangeEventArgs e)
    {
        var aux = e.Value.ToString();
        if (aux.Equals(string.Empty) || aux.Equals("Buscar"))
        {
            Devices = tmpDevices;
        }
        else {
            Devices = tmpDevices.Where(D => D.DeviceId == aux).ToList();
        }


    }
}
