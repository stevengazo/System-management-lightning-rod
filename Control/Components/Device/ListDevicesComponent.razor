@using Entities;
@using Business;

<style>
    thead Tr :hover{
        color:gray;
        border: 1px solid gray;
        border-radius: 5px;
    }
      
</style>
<div>
    <div style=""  hidden="@_bandHidden" class="flex-column">
        <p>Los equipos poseen las siguientes clasificaciones:</p>
        <div>
            <label >
                <strike>Inactivo</strike>
            </label>      
            <label style="color:red;">
                <strike>Reemplazado</strike>
            </label>     
            <label style="color:orange;">
                Fecha Limite Mantenimiento cercana
            </label>             
        </div>
     </div>
</div>

<div class="row justify-content-center">
    @for (int i = 1; i < NumberOfPages; i++)
    {
        var buttonNumber = i;
        <input type="button" class="btn btn-light" value="@buttonNumber" @onclick="@(e=> ChancePage(e,buttonNumber))" />
    }
</div>
<button  @onclick="changeHidden" class=" border-info">
                    <span class="oi oi-info" aria-hidden="true"  ></span> 
</button>                                       

<div>
    <table class="table  table-borderless  table-striped table-responsive-sm ">
        <thead class="justify-content-center align-content-center">
            <tr>
                <th @onclick="()=>handleOrderList(1)">
                    Numero de Serie
                </th>
                <th @onclick="()=>handleOrderList(2)"> 
                    Alias
                </th>
                <th @onclick="()=>handleOrderList(3)"> 
                    Fecha de Instalación
                </th>
                <th @onclick="()=>handleOrderList(4)"> 
                    Vendedor
                </th>
                <th @onclick="()=>handleOrderList(5)"> 
                    Cliente
                </th>                                  
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Devices)
            {               
                <tr class="align-middle">   
                    @if(obj.IsActive == false && obj.IsReplaced == true )
                    {
                            <td style="color:red;" ><strike> @obj.DeviceId</strike></td>
                            <td style="color:red;"><strike> @obj.Alias</strike></td>
                        <td style="color:red;"><strike> @obj.InstallationDate.Date.ToString("dd-MMM-yyyy")</strike></td>
                            <td style="color:red;"><strike> @obj.SaleMan.Name</strike></td>
                            <td style="color:red;"><strike> @obj.Client.Name</strike></td>
                    }
                    else if(obj.IsActive == false && obj.IsReplaced != true )
                    {
                    
                        <td><strike> @obj.DeviceId</strike></td>
                        <td><strike> @obj.Alias</strike></td>
                        <td><strike> @obj.InstallationDate.Date.ToString("dd-MMM-yyyy")</strike></td>
                        <td><strike> @obj.SaleMan.Name</strike></td>
                        <td><strike> @obj.Client.Name</strike></td>
                    }
                    else if( checkDate(@obj.RecomendedDateOfMaintenance) )
                    {
                        <td style="color:orange;"> @obj.DeviceId</td>
                        <td style="color:orange;"> @obj.Alias</td>
                        <td style="color:orange;"> @obj.InstallationDate.Date.ToString("dd-MMM-yyyy")</td>
                        <td style="color:orange;"> @obj.SaleMan.Name</td>
                        <td style="color:orange;"> @obj.Client.Name</td>
                    }
                    else 
                    {                                  
                        <td  > @obj.DeviceId</td>
                        <td > @obj.Alias</td>
                        <td> @obj.InstallationDate.Date.ToString("dd-MMM-yyyy")</td>
                        <td > @obj.SaleMan.Name</td>
                        <td > @obj.Client.Name</td>
                    }
                    <td> <a class="btn btn-primary" target="_blank" href="device/view/@obj.DeviceId"> Ver </a></td>
                    <td> <a class="btn btn-secondary" href="device/update/@obj.DeviceId"> Modificar</a></td>
                </tr>
            }
        </tbody>
    </table>
</div>



@code {
    #region Public Parametres

    /// Public Variables   
    [Parameter]
    public string ClientId { get; set; }

    [Parameter]
    public string SaleMandId { get; set; }

    #endregion

    #region Internal Parametres

    int SelectedPage = 1;


    /// Internal Variables 
    bool flagOrder = false;
    bool _bandHidden = true;
    int NumberOfPages = 1;
    int Quantity = 25;
    List<DeviceEntity> Devices = new List<DeviceEntity>();


    #endregion

    #region Methods

    void handleOrderList(int option = 0)
    {
        switch (option)
        {
            case 0:            
                break;
            case 1:                
                if (flagOrder)
                {
                    Devices = (from dev in Devices orderby dev.DeviceId ascending select dev).ToList();
                }
                else
                {
                    Devices = (from dev in Devices orderby dev.DeviceId descending select dev).ToList();
                }
                flagOrder = !flagOrder;
                break;
            case 2:
                if (flagOrder)
                {
                    Devices = (from dev in Devices orderby dev.Alias ascending select dev).ToList();
                }
                else
                {
                    Devices = (from dev in Devices orderby dev.Alias descending select dev).ToList();
                }
                flagOrder = !flagOrder;
                break;
            case 3:
                if (flagOrder)
                {
                    Devices = (from dev in Devices orderby dev.InstallationDate ascending select dev).ToList();
                }
                else
                {
                    Devices = (from dev in Devices orderby dev.InstallationDate descending select dev).ToList();
                }
                flagOrder = !flagOrder;
                break;
            case 4:
                if (flagOrder)
                {
                    Devices = (from dev in Devices orderby dev.SaleMan.Name ascending select dev).ToList();
                }
                else
                {
                    Devices = (from dev in Devices orderby dev.SaleMan.Name descending select dev).ToList();
                }
                flagOrder = !flagOrder;
                break;
            case 5:
                if (flagOrder)
                {
                    Devices = (from dev in Devices orderby dev.Client.Name ascending select dev).ToList();
                }
                else
                {
                    Devices = (from dev in Devices orderby dev.Client.Name descending select dev).ToList();
                }
                flagOrder = !flagOrder;
                break;
            default:
                break;
        }

    }


    bool checkDate(DateTime recommendateDate)
    {

        if( DateTime.Today < recommendateDate && recommendateDate < DateTime.Today.AddDays(15) )
        {
            return true;
        }else{
            return false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        QuantityOfPages();   
        Search();
    }

    private void QuantityOfPages()
    {
        double aux = 0f;
        if ((ClientId != null) && (SaleMandId == null))
        {
            aux = B_Device.CountDevicesByClient(ClientId) / Quantity;
        }
        else if ((ClientId == null) && (SaleMandId != null))
        {
            aux = B_Device.CountDevicesBySaleMan(SaleMandId) / Quantity;
        }

        if (aux > (aux + 0.01f))
        {
            NumberOfPages = (int)Math.Ceiling(aux);
        }
        else
        {
            NumberOfPages = (int)Math.Ceiling(aux);
            NumberOfPages += 1;
        }
    }


    private void ChancePage(MouseEventArgs e, int buttonNumber)
    {
        SelectedPage = buttonNumber;
        Search();
    }


    private void Search()
    {
        if ((ClientId != null) && (SaleMandId == null))
        {

            Devices = B_Device.GetDevicesByClient(ClientId, Quantity, SelectedPage);
        }
        else if ((ClientId == null) && (SaleMandId != null))
        {
            Devices = B_Device.GetDevicesBySaleman(SaleMandId, Quantity, SelectedPage);
        }

    }


    void changeHidden()
    {       
        _bandHidden=!_bandHidden;
    }

    #endregion
}
