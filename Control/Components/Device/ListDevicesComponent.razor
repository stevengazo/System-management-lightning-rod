@using Entities;
@using Business;



<div>
    <div >
        <label>Serie</label>
       <input type="text" @bind="DeviceIdToSearch" class=" form-control-sm" />
        <label>Alias</label>
        <input type="text" @bind="AliasToSearch" class="form-control-sm"/>
        <label>Año</label>
        <select class="form-control-sm" @bind="YearToSearch">
            <option value="">Seleccione un año...</option>
            @foreach (var item in Years)
            {
                <option value="@item">@item</option>
            }
        </select>
        <input  class="btn-outline-light" type="button" value="Buscar" />
    </div> 
    <></>
</div>


<hr />
<div class="form-group">
    @if (id.Length == 0)
    {
        for (int i = 1; i < NumberPages; i++)
        {
            var buttonNumber = i;
            <input type="button" class="btn btn-light" value="@buttonNumber" @onclick="@(e=> ChancePage(e,buttonNumber))" />
        }
    }

</div>

<div>
    <table class="table table-hover table-striped table-responsive-sm ">
        <thead>
            <tr>
                <th> Numero de Serie</th>
                <th> Alias</th>
                <th> Fecha de Instalación</th>
                <th> Vendedor</th>
                <th> Cliente</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var obj in Devices)
            {
                <tr>
                    <td> @obj.DeviceId</td>
                    <td> @obj.Alias</td>
                    <td> @obj.InstallationDate.Date</td>
                    <td> @obj.SaleMan.Name</td>
                    <td> @obj.Client.Name</td>
                    <td> <a href="device/view/@obj.DeviceId"> Ver </a></td>
                    <td> <a href="device/update/@obj.DeviceId"> Modificar</a></td>
                </tr>
            }
        </tbody>
    </table>
</div>



@code {  
    #region Public Parametres

    /// Public Variables   
    [Parameter]
    public string id { get; set; } = "";

    #endregion

    #region Internal Parametres
    /// Seach Variables
    public int YearToSearch { get; set; }

    public string AliasToSearch { get; set; }

    public string DeviceIdToSearch { get; set; }

    public string ErrorMessage { get; set; }

    /// Internal Variables 
    List<int> Years = B_Device.ListOfYears();
    int NumberPages = 1;
    List<DeviceEntity> tmpDevices = new List<DeviceEntity>();
    List<DeviceEntity> Devices = new List<DeviceEntity>();


    #endregion

    #region Methods

    protected override async Task OnInitializedAsync()
    {
        NumberOfPages();

        if (id == null)
        {
            tmpDevices = B_Device.GetPagingDevices(1, 40);
            Devices = tmpDevices;
        }
        else
        {
            tmpDevices = B_Device.ListOfDevices(id);
            Devices = tmpDevices;
        }
    }

    private void NumberOfPages()
    {
        double aux = B_Device.CountDevices() / 40;
        if (aux > (aux + 0.01f))
        {
            NumberPages = (int)Math.Ceiling(aux);
        }
        else
        {
            NumberPages = (int)Math.Ceiling(aux);
            NumberPages += 1;
        }
    }

    private void ChancePage(MouseEventArgs e, int buttonNumber)
    {
        var aux = B_Device.GetPagingDevices(buttonNumber, 40);
        Devices = aux;
    }

    private void SearchValue(ChangeEventArgs e)
    {
        tmpDevices = B_Device.GetSearchOfDevice(e.Value.ToString());
        var aux = e.Value.ToString();
        if (aux.Equals(string.Empty) || aux.Equals("Buscar Serie"))
        {
            Devices = tmpDevices;
        }
        else
        {
            Devices = tmpDevices;
        }


    }

    #endregion
}
