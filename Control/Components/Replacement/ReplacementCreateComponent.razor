@using Entities;
@using Business;
@inject NavigationManager nav

<EditForm Model="oReplacement">
    <div class="form-group">
        <label>Número de Serie del nuevo dispositivo</label>
        <input type="text" list="list-devices-new" @bind-value="oReplacement.NewSerieDevice" class="form-control" />
        <datalist id="list-devices-new">
            @foreach (var item in oDevices)
            {
                <option value="@item.Key"> @item.Value - @item.Key</option>
            }
        </datalist>
    </div>
    <div class="form-group">
        <label>Número de serie del dispositivo a reemplazar</label>
        <input text="text" list="list-devices-old" @bind-value="oReplacement.DeviceId" class="form-control" />
        <datalist id="list-devices-old">
            @foreach (var item in oDevices)
            {
                <option value="@item.Key"> @item.Value - @item.Key</option>
            }
        </datalist>
    </div>
    <div>
        <label>Notas</label>
        <InputTextArea class="form-control" @bind-Value="oReplacement.Notes"></InputTextArea>
    </div>
</EditForm>
<div class="align-content-center">
    <input  type="button" value="Guardar reemplazo" class="btn-info" @onclick="SaveReplacement"/>
    <p class="text-danger" >@Message</p>
</div>


@code {
    ReplacementDeviceEntity oReplacement = new ReplacementDeviceEntity();

    Dictionary<string, string> oDevices = new Dictionary<string, string>();
    string Message = "";

    protected override async Task OnInitializedAsync()
    {
        oDevices = B_Device.GetDictonaryOfDevicesWithClient();
    }

    protected void SaveReplacement()
    {
        try
        {
            if( oReplacement.NewSerieDevice.Equals(oReplacement.DeviceId))
            {
                Message = "Los numeros de serie son identicos, verifique los dispositivos";
            }else
            {
                B_Replacement.Create(oReplacement);
                nav.NavigateTo("replacement/list");                            
            }

        }
        catch(Exception f)
        {
            Message = $"Error: {f.Message}";

        }

    }

}
