@using Entities;
@using Business;
@inject NavigationManager Nav;





<table class="table table-light table-responsive-sm table-bordered">
    <thead>
        <tr>
            <td>Categoría</td>
            <td>Datos</td>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Id de referencia</td>
            <td>@oIncident.IncidentId</td>
        </tr>
        <tr>
            <td>Numero de serie</td>
            <td>@oIncident.DeviceId</td>
        </tr>
        <tr>
            <td>Alias</td>
            <td>@oIncident.Device.Alias</td>
        </tr>
        <tr>
            <td>Contacto del cliente</td>
            <td>@oIncident.ContactReportingName</td>
        </tr>
        <tr>
            <td>Fecha del Reporte</td>
            <td>@oIncident.ReportDate.ToShortDateString()</td>
        </tr>
        <tr>
            <td>Fecha del incidente</td>
            <td>@oIncident.IncidentDate.ToShortDateString()</td>
        </tr>
        <tr>
            <td>Fecha de la revisión</td>
            <td>@oIncident.RevisionDate.ToShortDateString()</td>
        </tr>
        <tr>
            <td>Fecha de envio de reporte</td>
            <td>@oIncident.SendReportDate.ToShortDateString()</td>
        </tr>
        <tr>
            <td>Descripción del Reporte</td>
            <td>@oIncident.ReportDescripcion</td>
        </tr>
        <tr>
            <td>Información de la revisión</td>
            <td>@oIncident.RevisionInformation</td>
        </tr>
        <tr>
            <td>Estatus del dispositivo RAYOS-NO</td>
            <td>@oIncident.DDCEStatus</td>
        </tr>
        <tr>
            <td>Recomendaciones</td>
            <td>@oIncident.Recomentations</td>
        </tr>
    </tbody>
</table>

@if (oIncident.IsClosed== true)
{
    <p class="text-success">
        Este incidente se encuentra cerrado. 
    </p>
}
else
{
    <div class="d-flex flex-row justify-content-around">
    <p class="text-danger">
       <b>
           Este incidente se encuentra abierto. El cliente aún no ha seguido las recomendaciones necesarias.<br>
           Este caso debe ser cerrado, cuando se hayan inmplementado las medidas necesarias de protección
       </b> 
       
    </p>
    <button class="btn btn-outline-success" @onclick="onclickState">
           Marcar como Cerrado
       </button>
    </div>

}

@code{
    [Parameter]
    public string IncidentId { get; set; }
    IncidentEntity oIncident = new IncidentEntity();
    string Message = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            oIncident = B_Incident.GetIncidentById(IncidentId);        
        }
        catch(Exception h)
        {
            Message = $"Error: {h.Message}. Intentelo de nuevo";
        }

    }

    private async void onclickState()
    {
        B_Incident.ChangeState(!oIncident.IsClosed, oIncident.IncidentId);
        oIncident.IsClosed = !oIncident.IsClosed;
    }
}