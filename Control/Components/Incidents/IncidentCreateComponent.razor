@using Entities;
@using Business;
@inject NavigationManager Nav;
@inject AuthenticationStateProvider authStateProvider

<EditForm Model="oIncident">
    <div class="form-group">
        <label><strong>Fecha del Reporte del cliente</strong></label>
        <InputDate class="form-control" @bind-Value="oIncident.ReportDate"></InputDate>
        <p><i>Fecha en la cuan el cliente realiza el reporte</i></p>
    </div>
    <div class="form-group">
        <label><strong>Fecha del Incidente</strong></label>
        <InputDate class="form-control" @bind-Value="oIncident.IncidentDate"></InputDate>
        <p><i>Fecha en la cual se presentó el indicente (especificado por el cliente)</i></p>
    </div>
    <div class="form-group">
        <label><strong>Fecha de revisión</strong></label>
        <InputDate class="form-control" @bind-Value="oIncident.RevisionDate"></InputDate>
        <p><i>Fecha de revisión del incidente</i></p>
    </div>
    <div class="form-group">
        <label><strong>Fecha envio reporte</strong></label>
        <InputDate class="form-control" @bind-Value="oIncident.SendReportDate"></InputDate>
        <p><i>Fecha de envío del reporte</i></p>
    </div>
    <div class="form-group">
        <label><strong>Descripción del Reporte del cliente</strong></label>
        <InputTextArea class="form-control" @bind-Value="oIncident.ReportDescripcion"></InputTextArea>
        <p><i>Descripción del incidente. (Versión del cliente, acerca de lo acontecido)</i></p>
    </div>
    <div class="form-group">
        <label><strong>Información de la revisión</strong></label>
        <InputTextArea class="form-control" @bind-Value="oIncident.RevisionInformation"></InputTextArea>
        <p><i>Información posterior a la revisión del equipo</i></p>
    </div>
    <div class="form-group">
        <label><strong>Estatus del dispositivo RAYOS-NO</strong></label>
        <InputTextArea class="form-control" @bind-Value="oIncident.DDCEStatus"></InputTextArea>
        <p><i>Estado del dispositivo (información posterior a la revisión)</i></p>
    </div>
    <div class="form-group">
        <label><strong>Recomendaciones</strong></label>
        <InputTextArea class="form-control" @bind-Value="oIncident.Recomentations"></InputTextArea>
        <p><i>Recomendaciones con base en la visita (o acciones a tomar en cuenta)</i></p>
    </div>
    <div class="form-group">
        <label><strong>Contacto del cliente</strong></label>
        <InputText class="form-control" @bind-Value="oIncident.ContactReportingName"></InputText>  
        <p><i>Nombre de la persona que realiza el reporte a la empresa</i></p>
    </div>
        <div class="form-group">
        <label><strong>Ténico encargado</strong></label>
        <InputSelect @bind-Value="oIncident.TechnicianId" class="form-control">
            <option value="">Seleccione un Técnico...</option>
            @foreach (var obj in technicians)
            {
                <option value="@obj.TechnicianId">@obj.TechnicianName</option>
            }
        </InputSelect>
        <p><i>Nombre de la persona que realizó la visita.</i></p>
    </div>
    <div class="form-group">
        <label><strong>Numero de serie</strong></label>
        <input type="text" @bind="@oIncident.DeviceId" list="listaEquipos" class="form-control" placeholder="Numero de serie">
        <datalist id="listaEquipos">
            <option value="">Seleccione un equipo...</option>
            @foreach (var obj in Devices)
            {
                <option value="@obj.DeviceId">@obj.Client.Name - @obj.DeviceId </option>
            }
        </datalist>           
        <p><i>Cliente y numero de serie del dispositivo.</i></p>
    </div>
</EditForm>
<div>
    <input class="btn btn-success"  type="button" value="Guardar Incidente" @onclick="SaveIncident"/>
</div>
<p class="text-danger">@Message</p>

@code{
    IncidentEntity oIncident = new IncidentEntity();
    List<DeviceEntity> Devices = new List<DeviceEntity>();
    List<TechnicianEntity> technicians = new List<TechnicianEntity>(); 

    string Message = "";

    protected override async Task OnInitializedAsync()
    {
        Devices = B_Device.ListOfDevices().Where(D=>D.IsActive==true).OrderBy(D=>D.ClientId).ToList();
        technicians = B_Technician.GetListOftechnicians();
    }

    private async Task SaveIncident()
    {
        try
        {
            var tmp = await authStateProvider.GetAuthenticationStateAsync();
            oIncident.lastEdition = DateTime.Today;
            oIncident.Author = tmp.User.Identity.Name;
            oIncident.lastEditor = tmp.User.Identity.Name;
            await B_Incident.CreateIncident(oIncident);
            await B_StorageManage.createFolderAsync($"{oIncident.DeviceId}/{oIncident.IncidentDate.Year.ToString()}-Incidents", oIncident.IncidentId);
            Nav.NavigateTo("incident/list");
        }
        catch(Exception f)
        {
            Message = $"Error: {f.Message}. Intentelo de nuevo";
        }
        
    }
}