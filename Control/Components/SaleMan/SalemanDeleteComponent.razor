@using Entities;
@using Business;

@inject NavigationManager Nav;


<div class="text-center">
    <h3>
        ¿Deseas borrar el vendedor @oSaleMan.Name?
    </h3>
    <p> Verifica las dependencias en el campo "Id Vendedor" en los registro de la tabla Equipos</p>
    <div class="d-flex flex-row justify-content-center">
        <input type="button" class="btn btn-danger" value="Eliminar el vendedor" @onclick="DeleteSaleMan" />
        <div></div>
    <input type="button" class="btn btn-light" value="Regresar a lista de vendedores" @onclick="BackLink" />
    </div>
    
    <p class="text-center" style="color:red">@message</p>
</div>

@code{
    [Parameter]
    public string SaleMandId { get; set; }
    string message;

    SaleManEntity oSaleMan = new SaleManEntity();
    protected override async Task OnInitializedAsync()
    {
        oSaleMan = B_SaleMan.SaleManById(SaleMandId);
     
    }


    private void DeleteSaleMan()
    {
        try
        {
            var BandDependence = B_SaleMan.HaveDependence(oSaleMan);
            if (!BandDependence)
            {
                B_SaleMan.DeleteSaleMan(oSaleMan);
                Nav.NavigateTo("saleman/list");
            }
            else
            {
                message = $"El vendedor \"{oSaleMan.Name}\" tiene dependencias en la tabla Equipos.\n Elimine las dependencias e instentelo de nuevo";
            }
        }
        catch(Exception g)
        {
            message = $"Error: {g.Message}";
        }      
    }

    private void BackLink()
    {
        Nav.NavigateTo("saleman/list");
    }
}