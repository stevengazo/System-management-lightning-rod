@using Entities;
@using Business;
@inject NavigationManager Nav;








<EditForm Model="oMaintenance"> 
    <div class="form-group">
        <label>Fecha de Mantenimiento</label>
        <InputDate class="form-control" @bind-Value="oMaintenance.MaintenanceDate"></InputDate>
    </div>
    <div class="form-group">
        <label>Estatus del dispositivo</label>
        <InputTextArea class="form-control" @bind-Value="oMaintenance.StatusOfDevice"></InputTextArea>
    </div>
    <div class="form-group">
        <label> Resistencia de la malla</label>
        <InputNumber class="form-control" @bind-Value="oMaintenance.SpatOhms"></InputNumber>
    </div>
    <div class="form-group">
        <label>Resistencia de las Semiesferas del Dispositivo</label>
        <InputNumber class="form-control" @bind-Value="oMaintenance.DeviceOhms"></InputNumber>
    </div>
    <div class="form-group">
        <label>Transferencia de Cargas</label>
        <InputNumber class="form-control" @bind-Value="oMaintenance.Ampers"></InputNumber>
    </div>
    <div class="form-group">
        <label>Numero de Informe</label>
        <InputText class="form-control" @bind-Value="oMaintenance.ReportId"></InputText>
    </div>
    <div class="form-group">
        <label>Recomendaciones</label>
        <InputTextArea class="form-control" @bind-Value="oMaintenance.Recomendations"></InputTextArea>
    </div>
    <div class="form-group">
        <label>Numero de Equipo</label>
        <InputSelect class="form-control" @bind-Value="oMaintenance.DeviceId">
            @if (devicesDict.Count != 0)
            {
                <option value=""> Seleccione un equipo...</option>
                @foreach (var Device in devicesDict)
                {
                    <option value="@Device.Value">@Device.Value- @Device.Key </option>
                }
            }
            else
            {
                <option value="">No hay dispositivos activos</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label>Tecnico encargado</label>
        <InputSelect class="form-control" @bind-Value="oMaintenance.TechnicianId">
            @if (technicians.Count != 0)
            {
                <option value="0"> Seleccione un Tecnico...</option>
                @foreach (TechnicianEntity technician in technicians)
                {
                    <option value="@technician.TechnicianId">@technician.TechnicianName </option>
                }
            }
            else
            {
                <option value="0">No hay tecnicos disponibles</option>
            }
        </InputSelect>
    </div>
    <div>
        <label>¿Numero de serie no visble?</label>
        <a href="device/create" target="_blank"> Crear dispositivo</a>
    </div>

</EditForm>





<input type="button" value="Registrar Mantenimiento" class="btn-primary" @onclick="SaveMaintenance">

<p>@Message</p>


@code{
    List<TechnicianEntity> technicians = new List<TechnicianEntity>();
    List<DeviceEntity> oDevices;
    Dictionary<string, string> devicesDict = new Dictionary<string, string>();
    bool BandExistDevice { get; set; }
    string Message="";

    MaintenanceEntity oMaintenance = new MaintenanceEntity();
    protected override async Task OnInitializedAsync()
    {
        devicesDict = B_Device.GetDictonaryOfDevicesWithClient();
        technicians = B_Technician.GetListOftechnicians();
    }

    private void SaveMaintenance()
    {
        try
        {
        oMaintenance.MaintenanceId = Guid.NewGuid().ToString();

        // asignacion de clases

        var tmpTechnician = technicians.Find(T => T.TechnicianId == oMaintenance.TechnicianId);
        //oMaintenance.Technician = tmpTechnician;
        var tmpDevice = oDevices.Find(D => D.DeviceId == oMaintenance.DeviceId);
        //  oMaintenance.Device = tmpDevice;

        B_Maintenance.Create(oMaintenance);
        Nav.NavigateTo($"maintenance/view/{oMaintenance.MaintenanceId}");


        }
        catch(Exception f)
        {
            Message = $"Error: {f.Message}. Intentelo de nuevo";
        }
   
    }


}