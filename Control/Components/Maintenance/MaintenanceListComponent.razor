@using Entities;
@using Business;


<hr/>
<div class="form-group">
    @for(int i=1; i<NumberPages; i++)
    {
        var buttonNUmber = i;
        <input type="button" value="@buttonNUmber" class="btn btn-light" @onclick="@(e=> ChangePage(e,buttonNUmber))" />
    }
</div>


<table class="table table-hover table-striped table-responsive-sm ">
    <thead>
        <tr>
            <th> Numero Serie</th>
            <th> Fecha de Mantenimiento </th>
            <th> Técnico</th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var obj in Maintenances)
        {
            <tr>
                <td> @obj.DeviceId </td>
                <td> @obj.MaintenanceDate.Date</td>
                <td> @obj.Technician.TechnicianName</td>
                <td> <a href="maintenance/view/@obj.MaintenanceId" target="_blank"> Ver </a></td>
                <td> <a href="maintenance/update/@obj.MaintenanceId"> Modificar </a></td>
                <td> <a style="color:red" href="maintenance/delete/@obj.MaintenanceId" target="_blank"> Eliminar </a></td>
            </tr>            
        }
    </tbody>
</table>


@code {

    List<MaintenanceEntity> Maintenances = new List<MaintenanceEntity>();

    int NumberPages = 1;

    List<MaintenanceEntity> tmp = new List<MaintenanceEntity>();

    protected override async Task OnInitializedAsync()
    {
        Maintenances = B_Maintenance.GetPagingMaintenances(0,40);
        NumberOfPages();
    }

    private void NumberOfPages()
    {
        double aux = B_Maintenance.CountMaintenances() / 40f;
        if(aux> (aux + 0.0f))
        {
            NumberPages = (int)Math.Ceiling(aux);
        }
        else
        {
            NumberPages = (int)Math.Ceiling(aux);
            NumberPages += 1;
        }
    }

    private void ChangePage(MouseEventArgs e, int ButtonNumber)
    {
        var aux = B_Maintenance.GetPagingMaintenances(ButtonNumber, 40);
        Maintenances = aux;
    }
}
